#!/bin/sh
#
# Copyright (c) 2007-2009 The PureDarwin Project.
# All rights reserved.
#
# @LICENSE_HEADER_START@
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @LICENSE_HEADER_END@
#

#
# aladin   <aladin@puredarwin.org>
#

#
# PureDarwin install (wrapper) script
#
#	Usage: pd_installer
#
# This script should not be run manually but by launchd via its respective plist.
#
# Based on the "OpenDarwin install script" by kvv
# $Id: rc.cdrom,v 1.30 2005/04/28 20:06:46 kevin Exp $
#
# Based on the "PureDarwin boot installer" (pd_installer_1) by Stuart Crook
#	v1.0 31/03/09 Initial release 

###############################################################################
# GLOBAL VARIABLES AND SETTINGS 
###############################################################################

# Redirecting stdin  (/dev/stdin  -> /dev/fd/0)
exec 0</dev/console
# Redirecting stdout (/dev/stdout -> /dev/fd/1)
exec 1>/dev/console
# Redirecting stderr (/dev/stderr -> /dev/fd/2)
exec 2>/dev/console

# File creation mask
umask 022			# all files created are -rw-r--r--

# Env
export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/libexec:/System/Library/CoreServices
export MANPATH=/usr/share/man:/usr/local/man
export EDITOR=/usr/bin/vi
export TERM=xterm-color

# Setting hostname
sysctl -w kern.hostname="PureDarwin.local"

# Populating /dev/fd/ with mount_fdesc
/sbin/mount -t fdesc -o union stdin /dev

# Workaround read-write
#/sbin/mount -uw /

# Find out where this script lives
DIRNAME=$(cd $(dirname $0) && pwd)

###############################################################################
# FUNCTIONS 
###############################################################################

add_user () {

	T_VOLUME="/Volumes/PureDarwin" # This one should exist
	/sbin/mount -t hfs $INSTALLDEV $T_VOLUME
	chroot $MOUNT /usr/local/share/puredarwin/scripts/pd_injectuser /
	/sbin/umount -f $T_VOLUME
}

welcome() {

	clear

	#echo
	#echo "Welcome to PureDarwin!" # /etc/motd
	#echo
	#echo " Darwin (c) 1999-2009 Apple, Inc. (opensource.apple.com)"
	#echo " Purity (c) 2007-2009 The PureDarwin Project (puredarwin.org)"
	#echo

	# Above replaced by `pd_xkp' built on PureDarwin (D9, i386) displaying the same message as above.
	/usr/local/share/puredarwin/projects/pd_xkp/pd_xkp

	#if [ -f "/Release Notes.txt" ]; then
	#	echo ""
	#	echo "Welcome to the installation of" `grep 'Darwin [0-9.-]*' /Release\ Notes.txt | head -1 | awk '{print $1" "$2}'`
	#	echo ""
	#fi
	#if [ -f "/Important Notice.txt" ]; then
	#	cat "/Important Notice.txt"
	#fi
}

###############################################################################
# INTRO 
###############################################################################

welcome

echo
echo "Enter 's' to drop into a shell."
echo

###############################################################################
# DISK DEVICE 
###############################################################################

# Get the device the user wants to install onto.
INSTALLDEV="novalue"
until [[ ${INSTALLDEV} != "" && -b ${INSTALLDEV} ]]
do
	echo "The following devices are available for installation:"
	until [[ ! -z "${FOO}" ]]
	do
		FOO=`$DIRNAME/../setup/pd_setup_files/iofindwholemedia`
	done
	$DIRNAME/../setup/pd_setup_files/iofindwholemedia
	printf "Which device would you like to install PureDarwin onto? "
	read INSTALLDEV

	if [ "${INSTALLDEV}" == "s" ]; then
		# Drop into a shell (resume at exit)
		/bin/sh
	else
		# Check and retrieve the disk device node (e.g., /dev/disk1)
		T_INSTALLDEV="$INSTALLDEV"
		INSTALLDEV=`$DIRNAME/../setup/pd_setup_files/iofindwholemedia ${INSTALLDEV}`

		if [ ! -b "${INSTALLDEV}" ]; then
			echo ""
			echo "${T_INSTALLDEV} doesn't exist, please enter one of the listed devices."
			echo ""
		fi
	fi
done

###############################################################################
# SETUP BASE
###############################################################################

#PUREDARWIN_RELEASE=""
#until [ ! : ]
#do
#	echo "The following flavors are available for installation: "
#	echo "1. PureDarwin"
#	echo "2. Puredarwin boostrap"
#	echo "3. PureDarwin nano"
#	printf "Which PureDarwin release would you like to deploy? "
#	read CHOICE
#	echo
#	case ${CHOICE} in
#		1) PUREDARWIN_RELEASE="default"
#		   ;;
#		2) PUREDARWIN_RELEASE="bootstrap"
#		   ;;
#		3) PUREDARWIN_RELEASE="nano"
#		   ;;
#	esac
#done

# Deploy a full release at this time.
/usr/local/share/puredarwin/setup/pd_setup $INSTALLDEV PureDarwin 

echo "Installation of the base system should now be complete."
echo ""

###############################################################################
# POST CONFIG 
###############################################################################

# Unpopulating /dev 
/sbin/umount /dev

until [ ! : ]
do
	echo "You may: "
#	echo "1. Add a user to the new system"
	echo "1. Reboot"
	echo "2. Spawn a shell"
	printf "Your Choice: "
	read CHOICE
	echo
	case ${CHOICE} in
#		1) add_user
#		   ;;
		1) break
		   ;;
		2) /bin/sh
		   ;;
	esac
done


###############################################################################
# REBOOT 
###############################################################################

echo "Installation should now be complete. Press 'enter' to restart"
read RESTART
echo ""
reboot

# bash interactive
#/bin/bash -i 

# zsh interactive
#/bin/zsh -i


